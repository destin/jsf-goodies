<?xml version="1.0" encoding="UTF-8"?><!-- Generated by TaglibToXSD XSLT modified by Dawid Pytel https://github.com/destin/jsf-goodies--><!-- Original XSLT created by + Mark A. Ziesemer, http://www.ziesemer.com + 2008-03-25 --><xs:schema version="1.0" xml:lang="en" elementFormDefault="qualified" targetNamespace="http://xmlns.jcp.org/jsp/jstl/core" xmlns:xs="http://www.w3.org/2001/XMLSchema">
<xs:annotation>
<xs:documentation>&lt;p&gt;JSTL 1.2 core library&lt;/p&gt; &lt;p&gt;The pre JSF 2.0 version of Facelets incorrectly declared the taglib uri to be &lt;code&gt;http://xmlns.jcp.org/jstl/core&lt;/code&gt;. For backwards compatibility implementations must correctly handle inclusions with the incorrect uri, and the correct uri, declared here.&lt;/p&gt;</xs:documentation>
<xs:documentation>tlib-version: 2.2</xs:documentation>
</xs:annotation>
<xs:element name="catch">
<xs:annotation>
<xs:documentation><![CDATA[
            Catches any Throwable that occurs in its body and optionally
            exposes it.
        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
<xs:attribute name="var">
<xs:annotation>
<xs:documentation><![CDATA[
                Name of the exported scoped variable for the
                exception thrown from a nested action. The type of the
                scoped variable is the type of the exception thrown.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="choose">
<xs:annotation>
<xs:documentation><![CDATA[
            Simple conditional tag that establishes a context for
            mutually exclusive conditional operations, marked by
            <when> and <otherwise>
        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
</xs:complexType>
</xs:element>
<xs:element name="if">
<xs:annotation>
<xs:documentation><![CDATA[
            Simple conditional tag, which evalutes its body if the
            supplied condition is true and optionally exposes a Boolean
            scripting variable representing the evaluation of this condition
        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
<xs:attribute name="test" use="required">
<xs:annotation>
<xs:documentation><![CDATA[
                The test condition that determines whether or
                not the body content should be processed.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="var">
<xs:annotation>
<xs:documentation><![CDATA[
                Name of the exported scoped variable for the
                resulting value of the test condition. The type
                of the scoped variable is Boolean.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="scope">
<xs:annotation>
<xs:documentation><![CDATA[
                Scope for var.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="forEach">
<xs:annotation>
<xs:documentation><![CDATA[
            The basic iteration tag, accepting many different
            collection types and supporting subsetting and other
            functionality
        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
<xs:attribute name="items">
<xs:annotation>
<xs:documentation><![CDATA[
                Collection of items to iterate over.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="begin">
<xs:annotation>
<xs:documentation><![CDATA[
                If items specified:
                Iteration begins at the item located at the
                specified index. First item of the collection has
                index 0.
                If items not specified:
                Iteration begins with index set at the value
                specified.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="end">
<xs:annotation>
<xs:documentation><![CDATA[
                If items specified:
                Iteration ends at the item located at the
                specified index (inclusive).
                If items not specified:
                Iteration ends when index reaches the value
                specified.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="step">
<xs:annotation>
<xs:documentation><![CDATA[
                Iteration will only process every step items of
                the collection, starting with the first one.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="var">
<xs:annotation>
<xs:documentation><![CDATA[
                Name of the exported scoped variable for the
                current item of the iteration. This scoped
                variable has nested visibility. Its type depends
                on the object of the underlying collection.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="varStatus">
<xs:annotation>
<xs:documentation><![CDATA[
                Name of the exported scoped variable for the
                status of the iteration. Object exported is of type
                javax.servlet.jsp.jstl.core.LoopTagStatus. This scoped variable
                has nested
                visibility.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="otherwise">
<xs:annotation>
<xs:documentation><![CDATA[
            Subtag of <choose> that follows <when> tags
            and runs only if all of the prior conditions evaluated to
            'false'
        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
</xs:complexType>
</xs:element>
<xs:element name="set">
<xs:annotation>
<xs:documentation><![CDATA[
            <p>Sets the result of an expression evaluation based on the
            value of the attributes. If "scope" the is present, but has a zero
            length or is equal to the string "page", <code>TagException</code>
            is
            thrown with an informative error message, ensuring page location
            information is saved.</p>

            <p>This handler operates in one of two ways.

            <ol>

            <li><p>The user has set "var", "value" and (optionally)
            "scope" attributes.</p></li>

            <li><p>The user has set "target", "property", and
            "value"
            attributes.</p></li>


            </ol>

            <p>The first case takes precedence over the second.</p>


        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
<xs:attribute name="var">
<xs:annotation>
<xs:documentation><![CDATA[
                Name of the exported scoped variable to hold the value
                specified in the action. The type of the scoped variable is
                whatever type the value expression evaluates to.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="value">
<xs:annotation>
<xs:documentation><![CDATA[
                Expression to be evaluated.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="target">
<xs:annotation>
<xs:documentation><![CDATA[
                Target object whose property will be set. Must evaluate to
                a JavaBeans object with setter property property, or to a
                java.util.Map object.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="property">
<xs:annotation>
<xs:documentation><![CDATA[
                Name of the property to be set in the target object.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
<xs:attribute name="scope">
<xs:annotation>
<xs:documentation><![CDATA[
                Scope for var.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
<xs:element name="when">
<xs:annotation>
<xs:documentation><![CDATA[
            Subtag of &lt;choose&gt; that includes its body if its
            condition evalutes to 'true'
        ]]></xs:documentation>
</xs:annotation>
<xs:complexType mixed="true">
<xs:choice minOccurs="0" maxOccurs="unbounded">
<xs:any processContents="lax"/>
</xs:choice>
<xs:attribute name="test" use="required">
<xs:annotation>
<xs:documentation><![CDATA[
                The test condition that determines whether or not the
                body content should be processed.
            ]]></xs:documentation>
</xs:annotation>
</xs:attribute>
</xs:complexType>
</xs:element>
</xs:schema>
